version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: copilotos-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: copilotos_user
      MONGO_INITDB_ROOT_PASSWORD: secure_password_change_me
      MONGO_INITDB_DATABASE: copilotos
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongodb/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - copilotos-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: copilotos-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_password_change_me
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - copilotos-network

  # Optional: MongoDB Express (Web UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: copilotos-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: copilotos_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: secure_password_change_me
      ME_CONFIG_MONGODB_URL: mongodb://copilotos_user:secure_password_change_me@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - copilotos-network
    profiles:
      - tools

  # Optional: Redis Commander (Web UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: copilotos-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: redis:redis:6379
      REDIS_PASSWORD: redis_password_change_me
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - copilotos-network
    profiles:
      - tools

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local

networks:
  copilotos-network:
    driver: bridge