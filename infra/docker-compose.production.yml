# ========================================
# PRODUCTION OVERRIDES
# ========================================
# This file overrides docker-compose.yml settings for production deployment
# Usage: docker compose -f docker-compose.yml -f docker-compose.production.yml --profile production up

services:
  # ========================================
  # WEB - Production Build Override
  # ========================================
  web:
    build:
      target: runner  # Use production stage instead of dev
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8001}
        NODE_ENV: production
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    environment:
      - NODE_ENV=production
      - API_BASE_URL=http://api:8001
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8001}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-Saptiva Copilot OS}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION:-1.0.0}
      - NEXT_PUBLIC_ENABLE_STREAMING=${NEXT_PUBLIC_ENABLE_STREAMING:-true}
      - NEXT_PUBLIC_ENABLE_DEEP_RESEARCH=${NEXT_PUBLIC_ENABLE_DEEP_RESEARCH:-true}
      - NEXT_PUBLIC_DEFAULT_MODEL=${NEXT_PUBLIC_DEFAULT_MODEL:-SAPTIVA_CORTEX}
      - PORT=3000
      - HOSTNAME=0.0.0.0
    # Remove user override to use the one defined in Dockerfile
    user: ""
    # No volumes for production - standalone build has everything baked in
    # Note: We can't use volumes: [] because it doesn't clear the base compose volumes
    # Instead we must not define volumes at all to let Dockerfile handle it
    # Remove the volume definitions from base by commenting them out for production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ========================================
  # NGINX - Production Configuration
  # ========================================
  nginx:
    restart: always
    environment:
      - NGINX_HOST=${NGINX_HOST:-localhost}
      - NGINX_PORT=${NGINX_PORT:-80}