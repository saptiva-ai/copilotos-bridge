name: Fast Deploy

on:
  # Disabled - using ci-cd-integrated.yml instead
  # push:
  #   branches: [ develop, main ]
  workflow_dispatch:

jobs:
  deploy:
    name: 🚀 Deploy to ${{ github.ref_name == 'main' && 'Production' || 'Staging' }}
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}

    steps:
      - name: 🚀 Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 34.42.214.246
          username: jf
          key: ${{ secrets.STAGING_SSH_KEY }}
          port: 22
          script: |
            # Set environment
            BRANCH="${{ github.ref_name }}"
            ENV_NAME=$([[ "$BRANCH" == "main" ]] && echo "production" || echo "staging")

            echo "🚀 Deploying $BRANCH to $ENV_NAME..."

            # Check if project exists, if not clone it
            if [ ! -d "/home/jf/copilotos-bridge" ]; then
              echo "📦 Cloning repository..."
              git clone https://github.com/saptiva-ai/copilotos-bridge.git /home/jf/copilotos-bridge
            fi

            # Navigate to project
            cd /home/jf/copilotos-bridge

            # Re-initialize git if corrupted
            if ! git status &>/dev/null; then
              echo "🔧 Fixing git repository..."
              rm -rf .git
              git init
              git remote add origin https://github.com/saptiva-ai/copilotos-bridge.git
            fi

            # Quick git update
            git fetch origin $BRANCH
            git checkout $BRANCH || git checkout -b $BRANCH origin/$BRANCH
            git reset --hard origin/$BRANCH

            # Check docker-compose availability
            if command -v docker-compose &> /dev/null; then
              COMPOSE_CMD="docker-compose"
            elif command -v docker &> /dev/null && docker compose version &> /dev/null; then
              COMPOSE_CMD="docker compose"
            else
              echo "❌ Neither docker-compose nor docker compose found"
              exit 1
            fi

            echo "🐳 Using: $COMPOSE_CMD"

            # Check which compose file to use
            if [ -f "docker-compose.fast.yml" ]; then
              COMPOSE_FILE="docker-compose.fast.yml"
            else
              COMPOSE_FILE="docker-compose.yml"
            fi

            echo "📋 Using compose file: $COMPOSE_FILE"

            # Ultra-fast build (cached layers)
            echo "🏗️ Building (cached)..."
            $COMPOSE_CMD -f $COMPOSE_FILE build

            # Stop old containers
            $COMPOSE_CMD down || true

            # Start services
            echo "🔄 Starting services..."
            $COMPOSE_CMD -f $COMPOSE_FILE up -d

            # Quick health check (30s max)
            echo "🔍 Health check..."
            for i in {1..6}; do
              if curl -sf http://localhost:8001/api/health >/dev/null 2>&1; then
                echo "✅ API healthy"
                break
              fi
              [[ $i -eq 6 ]] && { echo "❌ API timeout"; exit 1; }
              sleep 5
            done

            for i in {1..6}; do
              if curl -sf http://localhost:3000 >/dev/null 2>&1; then
                echo "✅ Web healthy"
                break
              fi
              [[ $i -eq 6 ]] && { echo "❌ Web timeout"; exit 1; }
              sleep 5
            done

            # Show status
            echo "🎉 $ENV_NAME deployment complete!"
            echo "🌐 Web: http://34.42.214.246:3000"
            echo "🔌 API: http://34.42.214.246:8001"

            # Show running containers
            $COMPOSE_CMD ps