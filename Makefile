# ========================================
# COPILOTOS BRIDGE - MAKEFILE
# ========================================

.PHONY: help local staging prod stop clean logs build test

# Colores para output
GREEN := \033[32m
YELLOW := \033[33m
RED := \033[31m
NC := \033[0m # No Color

## Mostrar ayuda
help:
	@echo "$(GREEN)Copilotos Bridge - Comandos disponibles:$(NC)"
	@echo ""
	@echo "$(YELLOW)üöÄ Deployment:$(NC)"
	@echo "  make local    - Levantar entorno de desarrollo local"
	@echo "  make staging  - Levantar entorno de staging"
	@echo "  make prod     - Levantar entorno de producci√≥n"
	@echo ""
	@echo "$(YELLOW)üìä Gesti√≥n:$(NC)"
	@echo "  make logs     - Ver logs de todos los servicios"
	@echo "  make stop     - Parar todos los servicios"
	@echo "  make clean    - Limpiar contenedores y vol√∫menes"
	@echo "  make build    - Construir im√°genes sin cache"
	@echo ""
	@echo "$(YELLOW)üîß Testing:$(NC)"
	@echo "  make test     - Ejecutar tests"
	@echo "  make lint     - Ejecutar linters"
	@echo ""
	@echo "$(YELLOW)üí° URLs:$(NC)"
	@echo "  Local:   http://localhost:3000"
	@echo "  Staging: http://localhost:3001"
	@echo "  API:     http://localhost:8001"

## Desarrollo local (autom√°tico con override)
local:
	@echo "$(GREEN)üöÄ Levantando entorno local...$(NC)"
	@./scripts/deploy-local.sh

## Staging
staging:
	@echo "$(GREEN)üöÄ Levantando entorno staging...$(NC)"
	@./scripts/deploy-staging.sh

## Producci√≥n
prod:
	@echo "$(GREEN)üöÄ Levantando entorno producci√≥n...$(NC)"
	@./scripts/deploy-prod.sh

## Ver logs
logs:
	@echo "$(YELLOW)üìã Mostrando logs...$(NC)"
	@docker compose -f infra/docker-compose.yml logs -f

## Parar servicios
stop:
	@echo "$(RED)‚èπÔ∏è  Parando servicios...$(NC)"
	@docker compose -f infra/docker-compose.yml -f infra/docker-compose.override.yml --env-file envs/.env.local down 2>/dev/null || true
	@docker compose -f infra/docker-compose.yml -f infra/docker-compose.staging.yml --env-file envs/.env.staging down 2>/dev/null || true
	@docker compose -f infra/docker-compose.yml -f infra/docker-compose.prod.yml --env-file envs/.env.prod down 2>/dev/null || true

## Limpiar todo
clean: stop
	@echo "$(RED)üßπ Limpiando contenedores y vol√∫menes...$(NC)"
	@docker system prune -f
	@docker volume prune -f

## Construir im√°genes sin cache
build:
	@echo "$(YELLOW)üî® Construyendo im√°genes...$(NC)"
	@docker compose -f infra/docker-compose.yml build --no-cache

## Ejecutar tests
test:
	@echo "$(YELLOW)üî¨ Ejecutando tests...$(NC)"
	@pnpm test 2>/dev/null || echo "Tests no configurados a√∫n"

## Ejecutar linters
lint:
	@echo "$(YELLOW)üîç Ejecutando linters...$(NC)"
	@pnpm lint 2>/dev/null || echo "Linters no configurados a√∫n"

# Default target
.DEFAULT_GOAL := help