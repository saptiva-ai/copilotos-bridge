version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: ../../apps/api
      dockerfile: Dockerfile
    container_name: copilotos-api
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MONGODB_URL=mongodb://copilotos_user:secure_password_change_me@mongodb:27017/copilotos?authSource=admin
      - REDIS_URL=redis://:redis_password_change_me@redis:6379/0
      - JWT_SECRET_KEY=change-me-to-secure-random-string
      - SECRET_KEY=change-me-too-but-only-for-dev
      - CORS_ORIGINS=["http://localhost:3000","http://web:3000"]
      - ALLOWED_HOSTS=["localhost","127.0.0.1","web","api"]
      - LOG_LEVEL=info
      - DEBUG=false
      - ALETHEIA_BASE_URL=http://aletheia:8000
    depends_on:
      - mongodb
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - copilotos-network

  # Next.js Frontend (fast build)
  web:
    build:
      context: ../..
      dockerfile: apps/web/Dockerfile
    container_name: copilotos-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - API_BASE_URL=http://api:8001
      - NEXT_PUBLIC_API_URL=http://localhost:8001
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - copilotos-network

  # MongoDB Database (reuse existing data)
  mongodb:
    image: mongo:6.0
    container_name: copilotos-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: copilotos_user
      MONGO_INITDB_ROOT_PASSWORD: secure_password_change_me
      MONGO_INITDB_DATABASE: copilotos
    volumes:
      - mongodb_data:/data/db
    networks:
      - copilotos-network

  # Redis Cache (reuse existing data)
  redis:
    image: redis:7-alpine
    container_name: copilotos-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_password_change_me
    volumes:
      - redis_data:/data
    networks:
      - copilotos-network

volumes:
  mongodb_data:
    external: true
  redis_data:
    external: true

networks:
  copilotos-network:
    driver: bridge
