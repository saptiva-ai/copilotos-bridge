# ========================================
# FASTAPI BACKEND ENVIRONMENT
# ========================================

# Server Configuration
HOST=0.0.0.0
PORT=8000
DEBUG=true
RELOAD=true

# Application
APP_NAME=CopilotOS Bridge API
APP_VERSION=0.1.0
APP_DESCRIPTION=API for chat and deep research using Aletheia orchestrator

# Database (MongoDB)
MONGODB_URL=mongodb://copilotos_user:secure_password@localhost:27017/copilotos
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/copilotos?retryWrites=true&w=majority
DB_MIN_POOL_SIZE=10
DB_MAX_POOL_SIZE=100
DB_CONNECTION_TIMEOUT_MS=5000

# Redis
REDIS_URL=redis://localhost:6379/0
REDIS_POOL_SIZE=10

# Authentication
JWT_SECRET_KEY=your-jwt-secret-key-here
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=60
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Aletheia Integration
ALETHEIA_BASE_URL=http://localhost:8000
ALETHEIA_API_KEY=
ALETHEIA_TIMEOUT=120
ALETHEIA_MAX_RETRIES=3

# SAPTIVA Integration
SAPTIVA_BASE_URL=https://api.saptiva.com
SAPTIVA_API_KEY=
SAPTIVA_TIMEOUT=30
SAPTIVA_MAX_RETRIES=3

# ========================================
# TEXT EXTRACTION CONFIGURATION
# ========================================
# Controls which backend is used for extracting text from PDFs and images
#
# Provider Options:
#   - "third_party" (default): Uses pypdf for PDFs + pytesseract for OCR
#   - "saptiva": Uses Saptiva Native Tools API (Phase 2 - not yet implemented)
#
# Phase 1 (current): Abstraction layer created, third_party is default
# Phase 2 (future): Complete Saptiva implementation, A/B testing
# Phase 3 (future): Make Saptiva default, retire third-party dependencies
#
EXTRACTOR_PROVIDER=third_party

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_CALLS=100
RATE_LIMIT_PERIOD=60

# CORS
CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]
CORS_ALLOW_CREDENTIALS=true

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json

# OpenTelemetry
OTEL_SERVICE_NAME=copilotos-api
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

# Security
SECURE_COOKIES=false
HTTPS_ONLY=false
SECRET_KEY=your-secret-key-for-sessions

# File Upload (Legacy - for general file uploads)
MAX_FILE_SIZE=10485760  # 10MB
ALLOWED_FILE_TYPES=["txt", "md", "pdf", "docx"]

# ========================================
# FILES TOOL V1 CONFIGURATION
# ========================================
# Unified file ingestion system for document processing
# See: apps/api/src/services/file_ingest.py

# Storage Configuration
# Directory where uploaded files are temporarily stored
FILES_ROOT=/tmp/copilotos_documents

# Time-to-live for uploaded files (in days)
# Files older than this will be automatically deleted by the reaper
FILES_TTL_DAYS=7

# Storage quota per user (in MB)
# Note: Quota enforcement not yet implemented in V1, reserved for V1.1
FILES_QUOTA_MB_PER_USER=500

# Legacy Environment Variables (for backward compatibility)
# These are still supported but FILES_* variables take precedence
# DOCUMENTS_STORAGE_ROOT=/tmp/copilotos_documents  # Legacy alternative to FILES_ROOT
# DOCUMENTS_TTL_HOURS=168                          # Legacy alternative to FILES_TTL_DAYS (168h = 7 days)

# Reaper Configuration (cleanup background task)
# How often the storage reaper runs to clean up old files (in seconds)
DOCUMENTS_REAPER_INTERVAL_SECONDS=900  # 15 minutes

# Maximum disk usage before triggering aggressive cleanup (percentage)
DOCUMENTS_MAX_DISK_USAGE_PERCENT=85

# Tool Feature Flags
# Server-driven UI toggles for tool visibility
TOOL_FILES_ENABLED=true                    # V1 unified files tool
TOOL_ADD_FILES_ENABLED=true                # Legacy add-files tool
TOOL_DOCUMENT_REVIEW_ENABLED=true          # Legacy document-review tool

# Supported MIME Types (hardcoded in file_ingest.py:31-39)
# - application/pdf
# - image/png, image/jpeg, image/jpg
# - image/heic, image/heif (requires ImageMagick/pyheif)
# - image/gif

# Upload Limits (hardcoded in file_ingest.py:30)
# - MAX_UPLOAD_BYTES: 10 MB per file

# Rate Limiting (hardcoded in routers/files.py:28-29)
# - 5 uploads per minute per user (Redis ZSET sliding window)
# - 60 second window with automatic cleanup

# Background Tasks
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2
