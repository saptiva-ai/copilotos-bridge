version: '1.5'
ultima_actualizacion: '2025-09-22'
proyecto: SAPTIVA CopilotOS — Chat UI + Aletheia
estados_validos:
- pendiente
- en_progreso
- bloqueado
- hecho
prioridades:
- critica
- alta
- media
- baja
estado_actual:
  progreso_general: 0.88
  descripcion: 'Monorepo estable con Next.js 14 + FastAPI orquestando flujos de chat
    y deep research.

    Integraciones con SAPTIVA, Aletheia, MongoDB y Redis activas; OpenTelemetry y
    CI/CD en marcha.

    Los principales gaps están en pruebas E2E, endurecimiento de seguridad y experiencia
    responsive.

    '
  focos_inmediatos:
  - Completar suite E2E para cubrir chat profundo y generación de reportes
  - Priorizar mejoras de UI/UX (responsive, prompts rápidos, toolbar integrada)
  - Asegurar persistencia de historial antes del próximo release
  riesgos_principales:
  - Sin tests E2E automatizados el release continúa dependiendo de QA manual (riesgo
    alto)
  - Persistencia de historial incompleta limita auditoría y reporting
  - UX incompleta (responsive, prompts, toolbar) puede afectar adopción en demo
  stack:
    frontend:
    - Next.js 14
    - TypeScript
    - Tailwind
    - Zustand
    backend:
    - FastAPI
    - Python 3.11
    - Beanie ODM
    - Redis
    - MongoDB
    infraestructura:
    - Docker Compose
    - GitHub Actions
    - OpenTelemetry
logros_recientes:
- id: RESEARCH-COORDINATOR-200
  fecha: '2025-09-20'
  descripcion: Router inteligente que deriva chats complejos a deep research con contexto
    compartido
  impacto: 40% de las conversaciones complejas ya se escalan automáticamente
- id: STREAMING-SSE-REAL-201
  fecha: '2025-09-19'
  descripcion: Streaming SSE productivo con manejos de backpressure y fallback seguro
  impacto: Entrega de resultados parciales en tiempo real y UX fluida
- id: OPENTELEMETRY-SETUP-205
  fecha: '2025-09-18'
  descripcion: Instrumentación de API, Mongo y Redis con trazas y métricas unificadas
  impacto: Base lista para dashboards y alertas en Grafana
- id: AUTH-MONGODB-BOOTSTRAP
  fecha: '2025-09-22'
  descripcion: Autenticación con MongoDB, seeder y flujo de landing/login integrados
  impacto: Permite demos end-to-end con usuario real y habilita pruebas de seguridad
backlog_prioritario:
  critica:
  - id: HISTORY-PERSIST-110
    objetivo: Persistir historial unificado de chat + research con paginación y cache
    estado: pendiente
    dependencias:
    - DB-SCHEMA-030
    - STREAMING-SSE-050
    proximos_pasos:
    - Diseñar colección optimizada (Beanie) para historial enriquecido
    - Implementar API `/api/history/{chat_id}` con cache Redis y paginación
    - Alinear UI para consumir historial consolidado
    criterios_aceptacion:
    - GET /api/history/{chat_id} devuelve mensajes + eventos research ordenados por
      timestamp
    - P95 de respuesta de historial <= 600 ms con cache habilitado
    - Hard refresh en /chat/[id] rehidrata conversación y research en < 1.5 s sin
      errores 404
    - Nuevos mensajes/research invalidan cache y se reflejan en UI en <= 2 s
    - Tests de integración cubren creación, lectura, eliminación e IDs inválidos
    metricas_exito:
      latency_p95_ms: 600
      rehydration_max_s: 1.5
  alta:
  - id: TESTS-UNIT-135
    objetivo: Cobertura >80% en módulos críticos (API, stores, servicios)
    estado: pendiente
    proximos_pasos:
    - Priorizar componentes de chat, auth y research coordinator
    - Integrar mocks para SAPTIVA y Aletheia
    criterios_aceptacion:
    - Cobertura global del paquete API + stores >= 80%
    - Funciones críticas (research coordinator, auth service, prompts) tienen pruebas
      de borde
    - Suite se ejecuta en CI en < 5 min y falla ante regresiones intencionales
    metricas_exito:
      coverage_min: 0.8
  - id: TESTS-E2E-140
    objetivo: Playwright cubriendo chat → research → descarga de reporte
    estado: pendiente
    dependencias:
    - TESTS-UNIT-135
    - UI-STREAM-100
    proximos_pasos:
    - Automatizar flujo crítico con datos seed
    - Simular fallos de red y validar recuperación
    - Integrar a pipeline GitHub Actions
    criterios_aceptacion:
    - 'Escenario Playwright: prompt → respuesta → escalamiento deep research → descarga
      reporte'
    - Simulación de fallo de red con recuperación automática cubierta
    - Pipeline CI bloquea merge si pruebas E2E fallan
    - Screenshots/videos adjuntos en fallos
  - id: AUTH-MONGODB-VALIDATION-210
    objetivo: QA integral del nuevo flujo de autenticación
    estado: pendiente
    proximos_pasos:
    - Ejecutar pruebas manuales de registro/login/refresh
    - Verificar tokens desde UI y endpoints protegidos
    - Completar checklist de seguridad y actualizar README
    criterios_aceptacion:
    - Registro, login, refresh manuales verificados con usuario demo y casos inválidos
    - Tokens almacenados en store, expiración respetada y logout limpia estado
    - Checklist OWASP básico completado (hash, rate limit, logs sin secretos)
    - README actualizado con flujo demo y troubleshooting
  - id: CHAT-QUICK-PROMPTS-P0
    objetivo: Implementar quick prompts que envían mensajes y solo aparecen en estado
      vacío
    estado: pendiente
    proximos_pasos:
    - Mostrar grid de ejemplos solo cuando la conversación está vacía
    - Enviar el prompt al chat al hacer click (copiar + enviar)
    - Diseñar chips responsivos en móvil y tarjetas 2–4 columnas en desktop
    criterios_aceptacion:
    - Grid de ejemplos visible solo en conversaciones vacías
    - Click en ejemplo rellena input y envía mensaje en <= 200 ms
    - 'Diseño responsive: chips horizontal en <= 600px, tarjetas 2-4 columnas en desktop'
    - Evento analytics example.clicked emitido
  - id: CHAT-INPUT-TOOLBAR-P0
    objetivo: Reubicar selector de modelo y ToolTray dentro del ChatInput
    estado: pendiente
    proximos_pasos:
    - Mover dropdown de modelos al margen izquierdo del input
    - Integrar ToolTray en la misma barra con comportamiento wrap
    - Garantizar que Deep Research opere como tool (orquestador → resumen + fuentes
      → stream del LLM)
    criterios_aceptacion:
    - Selector de modelo integrado al lado izquierdo del input con persistencia por
      conversación
    - ToolTray comparte barra de input, con wrap y focus accesible
    - Deep Research ejecutado como tool produce summary + sources streameados
    - Sin regresiones en shortcuts o envío con Enter
  - id: RESPONSIVE-CORE-SCREENS-212
    objetivo: Hacer responsive los layouts clave (landing, chat, research, history,
      reports)
    estado: pendiente
    proximos_pasos:
    - Definir breakpoints ≤768px, 769-1024px, ≥1025px
    - Ajustar grids y inputs evitando overflow
    - Usar 100dvh menos header para Safari iOS y evitar doble scroll
    - Registrar evidencias de QA en Chrome/Firefox/Safari
    criterios_aceptacion:
    - Layouts validados en breakpoints 360, 768, 1024, 1440 px
    - Safari iOS usa 100dvh sin doble scroll
    - Scroll principal solo en MessageList
    - QA visual firmado con capturas antes/después
  - id: SETTINGS-API-KEY-P0
    objetivo: Modal de API Key accesible con teclado y atributos UX completos
    estado: pendiente
    proximos_pasos:
    - Agregar botón Settings que abre modal con focus-trap y cierre con ESC
    - Implementar atajo Cmd/Ctrl+K para abrir/cerrar
    - Mostrar banner cuando falta la key
    criterios_aceptacion:
    - 'Modal accesible: focus-trap, cierre ESC/overlay, announce ARIA'
    - Cmd/Ctrl+K abre/cierra modal en desktop
    - Banner persistente cuando la key falta o es inválida
    - Evento analytics settings.opened y api_key.saved emitidos
  - id: DESIGN-TOKENS-LAB-P0
    objetivo: Alinear tipografía, radios y colores a los tokens del Lab
    estado: pendiente
    proximos_pasos:
    - Configurar fuente única y escala tipográfica 12/14/16/18/20/24/32/40 con weights
      400/600
    - Aplicar radius 12–16px en inputs/chips
    - Verificar paleta Tailwind saptiva.* contra referencia visual
    - Generar snapshots comparativos
    criterios_aceptacion:
    - Tipografía única y escala 12/14/16/18/20/24/32/40 documentada en tailwind.config
    - Radius 12-16 px aplicado en inputs, chips y tarjetas clave
    - Palette saptiva.* actualizada y usada en componentes críticos
    - Snapshots visuales comparados con referencia del Lab (<2% diff en Chromatic)
  media:
  - id: LANDING-AUTH-UX-VALIDATION-211
    objetivo: QA UX de la nueva landing y formularios de auth
    estado: pendiente
    proximos_pasos:
    - Revisión responsive y accesibilidad (tab order, focus states)
    - Registrar hallazgos con capturas y checklist
    criterios_aceptacion:
    - Responsive OK en 360/768/1024/1440 px
    - Focus order lineal y sin trampas, contrastes >= WCAG AA
    - Flow landing → login/register → chat completado sin warnings en consola
    - Reporte QA con capturas en Notion/drive
  - id: MOBILE-INTERACTIONS-213
    objetivo: Optimizar menús y formularios para uso móvil
    estado: pendiente
    proximos_pasos:
    - Ajustar drawer lateral y CTA ≥44px
    - Validar teclado virtual en iOS/Android
    - Mejorar puntaje Lighthouse móvil ≥90
    criterios_aceptacion:
    - Botones principales con área táctil >= 44px
    - Gestos drawer documentados y accesibles
    - Teclado virtual no tapa campos en iOS/Android
    - Lighthouse móvil >= 90 en Accessibility y Best Practices
  - id: DOCS-180
    objetivo: Documentación operativa y guías de contribución
    estado: pendiente
    proximos_pasos:
    - Publicar runbook, troubleshooting y ADRs en /docs
    - Actualizar CONTRIBUTING.md con flujo de trabajo
    criterios_aceptacion:
    - Runbook y troubleshooting publicados y versionados
    - ADRs actualizados con decisiones UI/UX 2025-09
    - CONTRIBUTING.md describe flujo pull-request + QA manual
  - id: HISTORY-UX-NO404-P0
    objetivo: Evitar errores 404 en historial y manejar estados vacíos
    estado: pendiente
    proximos_pasos:
    - Asegurar que /chat/[id] hydrate historial tras refresh
    - Mostrar estado controlado para IDs inválidos
    - Coordinar con HISTORY-PERSIST-110 para datos consistentes
    criterios_aceptacion:
    - Navegar a /chat/[id] inexistente muestra estado amigable dentro del chat
    - Refresh en /chat/[id] válido mantiene historial
    - 404 del router Next.js no aparece en historial
    - Tests UI cubren casos inválidos
  - id: ROUTE-DEPRECATION-REPORTS
    objetivo: Eliminar ruta /reports y limpiar navegación
    estado: pendiente
    proximos_pasos:
    - Remover ruta y enlaces asociados
    - Redirigir tráfico existente a vistas alternativas
    - Actualizar documentación y sitemap
    criterios_aceptacion:
    - Ruta /reports removida del App Router y del header/sidebar
    - Redirección o mensaje de transición definido para usuarios existentes
    - Documentación y sitemap actualizados
  baja: []
riesgos_y_dependencias:
- Persisten dependencias externas (SAPTIVA, Aletheia); mantener mocks actualizados
  para pruebas offline
- Sin historial persistido no se pueden auditar conversaciones (bloquea analítica)
- Dashboards sin terminar complican soporte en horario nocturno
notas_operativas:
- 'Usuario demo disponible: demo_admin / ChangeMe123!'
- 'Variables de entorno de referencia: apps/api/.env.development.sample y apps/web/.env.local.example'
- 'Scripts clave: apps/api/scripts/seed_demo_data.py, docker-compose.fast.yml para
  Mongo/Redis'
backlog_deferido:
- id: SECURITY-150
  motivo: Re-agendar endurecimiento backend después de consolidar UX
  estado: en_espera
- id: OBSERVABILITY-130
  motivo: Observabilidad avanzada se retoma tras UX
  estado: en_espera
- id: PRODUCTION-READINESS-195
  motivo: Depende de observabilidad y se reagendará
