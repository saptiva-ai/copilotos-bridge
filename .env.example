# ========================================
# COPILOTOS BRIDGE - ENVIRONMENT CONFIGURATION
# ========================================
# This file contains all configurable variables for the application.
# Copy this to .env and fill in your actual values.
#
# SECURITY WARNING:
# - Never commit .env files to version control
# - Use strong, randomly generated secrets in production
# - Rotate API keys and secrets regularly (every 90 days)
#
# Quick Setup:
#   make setup                  # Interactive setup (recommended)
#   make setup-interactive-prod # Production setup
# ========================================

# ========================================
# DEPLOYMENT CONFIGURATION
# ========================================
# Production server details (used by deployment scripts)
# Update these for your production environment

# Server SSH Configuration
PROD_SERVER_IP=your-server-ip-here
PROD_SERVER_USER=your-ssh-user
PROD_SERVER_HOST=${PROD_SERVER_USER}@${PROD_SERVER_IP}

# Deployment Paths
PROD_DEPLOY_PATH=/opt/copilotos-bridge
PROD_BACKUP_DIR=/opt/backups/copilotos-production

# Legacy variables (for backward compatibility)
DEPLOY_SERVER=${PROD_SERVER_HOST}
DEPLOY_PATH=${PROD_DEPLOY_PATH}
BACKUP_DIR=${PROD_BACKUP_DIR}

# Domain Configuration
PROD_DOMAIN=your-domain.com
NEXT_PUBLIC_APP_URL=https://${PROD_DOMAIN}
NEXT_PUBLIC_API_URL=https://${PROD_DOMAIN}/api

# ========================================
# MAIN APPLICATION CONFIGURATION
# ========================================
NODE_ENV=development
API_BASE_URL=http://localhost:8001
HOST=0.0.0.0
PORT=8001

# ========================================
# AUTHENTICATION / SECURITY
# ========================================
# IMPORTANT: Generate strong secrets for production
# Use: openssl rand -hex 32

JWT_SECRET_KEY=change-me-to-secure-random-string-in-production
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=60
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
JWT_ALGORITHM=HS256
SECRET_KEY=another-secret-for-session-signing

# ========================================
# ALETHEIA ORCHESTRATOR
# ========================================
# Optional: Deep research and orchestration features
ALETHEIA_BASE_URL=https://aletheia.saptiva.ai
ALETHEIA_API_KEY=
ALETHEIA_TIMEOUT_SECONDS=120
ALETHEIA_MAX_RETRIES=3
ALETHEIA_RETRY_DELAY_MS=1000

# ========================================
# SAPTIVA API CONFIGURATION
# ========================================
# REQUIRED: Get your API key from https://saptiva.com/dashboard/api-keys
# Format: va-ai-xxxxx...
SAPTIVA_API_KEY=your-saptiva-api-key-here

# SAPTIVA API Configuration
SAPTIVA_BASE_URL=https://api.saptiva.com
NEXT_PUBLIC_SAPTIVA_BASE_URL=https://api.saptiva.com
NEXT_PUBLIC_SAPTIVA_API_KEY=${SAPTIVA_API_KEY}
SAPTIVA_TIMEOUT=30
SAPTIVA_MAX_RETRIES=3

# Chat Model Configuration
CHAT_ALLOWED_MODELS=["Saptiva Turbo","Saptiva Cortex","Saptiva Ops","Saptiva Legacy","Saptiva Coder"]
CHAT_DEFAULT_MODEL=Saptiva Turbo

# ========================================
# STREAMING AND PERFORMANCE
# ========================================
STREAM_BACKPRESSURE_MAX=1000
STREAM_HEARTBEAT_INTERVAL_MS=5000
SSE_KEEP_ALIVE_TIMEOUT_MS=30000
STREAM_BUFFER_SIZE=1024

# ========================================
# DATABASE (MongoDB)
# ========================================
# MongoDB connection details
MONGODB_HOST=mongodb
MONGODB_PORT=27017
MONGODB_USER=copilotos_user
MONGODB_PASSWORD=secure_password_change_me
MONGODB_DB=copilotos

# Constructed MongoDB URL (uses variables above)
MONGODB_URL=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/${MONGODB_DB}?authSource=admin

# MongoDB Atlas (alternative cloud option)
# MONGODB_URL=mongodb+srv://username:password@cluster.mongodb.net/copilotos?retryWrites=true&w=majority

# Database connection configuration
DB_MIN_POOL_SIZE=10
DB_MAX_POOL_SIZE=100
DB_CONNECTION_TIMEOUT_MS=5000
DB_SERVER_SELECTION_TIMEOUT_MS=5000
DB_MAX_IDLE_TIME_MS=0
DB_CONNECT_TIMEOUT_MS=10000

# ========================================
# REDIS CACHE
# ========================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=redis_password_change_me

# Constructed Redis URL (uses variables above)
REDIS_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# Redis configuration
REDIS_MAX_CONNECTIONS=10
REDIS_CONNECTION_TIMEOUT_MS=5000
REDIS_SOCKET_KEEPALIVE=true

# ========================================
# SECURITY AND RATE LIMITING
# ========================================
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST_SIZE=20
MAX_PROMPT_LENGTH=10000
MAX_UPLOAD_SIZE_MB=10
MAX_CONCURRENT_STREAMS=50

# CORS configuration (comma-separated list)
CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]
ALLOWED_HOSTS=["localhost","127.0.0.1","web","api"]

# Security headers
SECURE_HEADERS_ENABLED=true
CSRF_PROTECTION_ENABLED=true

# ========================================
# OBSERVABILITY AND MONITORING
# ========================================
LOG_LEVEL=info
LOG_FORMAT=json
DEBUG=false

# OpenTelemetry configuration
OTEL_SERVICE_NAME=copilotos-bridge
OTEL_SERVICE_VERSION=1.0.0
OTEL_ENVIRONMENT=development
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OTEL_EXPORTER_OTLP_HEADERS=
OTEL_RESOURCE_ATTRIBUTES=service.name=${OTEL_SERVICE_NAME},service.version=${OTEL_SERVICE_VERSION}

# Jaeger specific
JAEGER_ENDPOINT=http://localhost:14268/api/traces
JAEGER_AGENT_HOST=localhost
JAEGER_AGENT_PORT=6831

# Metrics
PROMETHEUS_METRICS_ENABLED=true
PROMETHEUS_METRICS_PORT=9090
METRICS_COLLECTION_INTERVAL_MS=10000

# ========================================
# FEATURE FLAGS
# ========================================
# Backend feature flags
FEATURE_DEEP_RESEARCH_ENABLED=true
FEATURE_WEB_SEARCH_ENABLED=true
FEATURE_REPORT_DOWNLOAD_ENABLED=true
FEATURE_CHAT_HISTORY_ENABLED=true
FEATURE_MODEL_SELECTION_ENABLED=true

# Kill switches (emergency disable)
DEEP_RESEARCH_KILL_SWITCH=false
WEB_SEARCH_KILL_SWITCH=false

# Frontend tool visibility (UI feature flags)
NEXT_PUBLIC_FEATURE_WEB_SEARCH=true
NEXT_PUBLIC_FEATURE_DEEP_RESEARCH=true
NEXT_PUBLIC_FEATURE_ADD_FILES=false
NEXT_PUBLIC_FEATURE_GOOGLE_DRIVE=false
NEXT_PUBLIC_FEATURE_CANVAS=false
NEXT_PUBLIC_FEATURE_AGENT_MODE=false
NEXT_PUBLIC_FEATURE_MIC=false

# ========================================
# DEVELOPMENT TOOLS
# ========================================
# Only in development
ENABLE_DEBUG_TOOLBAR=false
ENABLE_MOCK_ALETHEIA=false
MOCK_RESPONSE_DELAY_MS=500

# API Documentation
ENABLE_API_DOCS=true
ENABLE_REDOC=true

# Demo User (for development/testing only)
DEMO_USER_EMAIL=demo@example.com
DEMO_USER_PASSWORD=Demo1234

# ========================================
# PRODUCTION OVERRIDES
# ========================================
# Uncomment and set these in production (.env.prod)
#
# NODE_ENV=production
# DEBUG=false
# LOG_LEVEL=warn
# ENABLE_API_DOCS=false
# ENABLE_REDOC=false
#
# Generate secrets with:
#   openssl rand -hex 32           # For JWT_SECRET_KEY
#   openssl rand -base64 24        # For passwords
#
# JWT_SECRET_KEY=<generated-64-hex-chars>
# SECRET_KEY=<generated-64-hex-chars>
# MONGODB_PASSWORD=<generated-strong-password>
# REDIS_PASSWORD=<generated-strong-password>
# SAPTIVA_API_KEY=<from-dashboard>
#
# Domain configuration:
#   PROD_DOMAIN=copilotos.saptiva.com
#   NEXT_PUBLIC_APP_URL=https://copilotos.saptiva.com
#   NEXT_PUBLIC_API_URL=https://copilotos.saptiva.com/api
#
# CORS for production:
#   CORS_ORIGINS=["https://copilotos.saptiva.com"]
#   ALLOWED_HOSTS=["copilotos.saptiva.com","api","localhost"]
#
# Performance tuning:
#   DB_MAX_POOL_SIZE=200
#   REDIS_MAX_CONNECTIONS=50
#   MAX_CONCURRENT_STREAMS=100
#   RATE_LIMIT_REQUESTS_PER_MINUTE=1000

# ========================================
# ENVIRONMENT-SPECIFIC FILES
# ========================================
# This project supports multiple environment files:
#
#   .env                  - Auto-selected (development)
#   .env.local            - Local development overrides
#   .env.prod             - Production configuration
#   .env.staging          - Staging configuration
#   .env.test             - Test configuration
#
# Loading priority:
#   1. .env.<environment> (highest)
#   2. .env.local
#   3. .env (lowest)
#
# Setup commands:
#   make setup                    # Create .env.local (interactive)
#   make setup-interactive-prod   # Create .env.prod (interactive)
#   make setup-quick              # Quick setup with defaults

# ========================================
# ADDITIONAL NOTES
# ========================================
#
# Security Best Practices:
# 1. Never commit .env files to git
# 2. Use different secrets for each environment
# 3. Rotate API keys every 90 days
# 4. Monitor for leaked credentials
# 5. Use secrets management in production (e.g., AWS Secrets Manager, HashiCorp Vault)
#
# Deployment:
#   make deploy-quick    # Fast incremental deploy
#   make deploy-clean    # Full rebuild deploy
#   make deploy-status   # Check production status
#
# Troubleshooting:
#   make health          # Check service health
#   make logs            # View application logs
#   make verify-deps     # Verify dependencies
#
# Documentation:
#   - README.md                    - Quick start guide
#   - docs/DEPLOY_GUIDE.md         - Deployment instructions
#   - docs/TROUBLESHOOTING.md      - Common issues
#   - SECURITY_AUDIT_REPORT.md     - Security findings
#
# Support:
#   - GitHub Issues: https://github.com/your-org/copilotos-bridge/issues
#   - Documentation: https://docs.copilotos.com
