Basicos
API Reference
Procesamiento de respuestas
URL:  https://api.saptiva.com/v1/chat/completions

POST /

Headers

Nombre
Valor
Content-Type

application/json

Authorization

Bearer <API_KEY>

Nuestra API requiere autenticaciÃ³n utilizando un Token Bearer. Genera tu token dentro de nuestro lab y comienza a hacer peticiones. Incluye el token en el header de la solicitud de la siguiente manera:

Authorization: Bearer <TOKEN AUTHORIZATION>

ParÃ¡metros Obligatorios
Body

Parametro
Tipo
DescripciÃ³n
Ejemplo
model

string

Nombre del modelo LLM a usar.

Saptiva Cortex

messages

array

Lista (o array) de objetos que representan un historial de conversaciÃ³n entre un sistema y un usuario.

Copiar
[
    {
      "role": "system",
      "content": "Eres un agente servicial"
    },
    {
      "role": "user",
      "content": "Â¿CuÃ¡l es la capital de Francia?"
    }
  ]
ParÃ¡metros Opcionales
Body

ParÃ¡metro
Tipo
DescripciÃ³n
Valores por Defecto
max_tokens

number

NÃºmero de tokens.

600

temperature

double

Grado de aleatoriedad en la generaciÃ³n del texto. (valor entre 0.0 y 1.0)

0.7

top_p

double

Limite de diversidad del conjunto de palabras consideradas. (valor entre 0.0 y 1.0)

0.9

stream

bool

Indica si la respuesta del modelo debe ser enviada por partes (streaming) o completa de una vez.

false

guard

bool

Habilita revisiÃ³n de la inferencia del usuario en busca de algÃºn tipo de riesgo en la informaciÃ³n provista.

false

tools

List[ToolItem]

Define una lista de tools a usar. Para mÃ¡s informaciÃ³n ver Saptiva Agents

null

prompt

string

Texto a embedder

Hola

Solicitudes (Modelos Texto-Texto)
A continuaciÃ³n, se presenta el formato que debe tener el BODY, junto con el ejemplo de la respuesta esperada.

Modelos: 

Copiar
Saptiva Turbo
Saptiva Ops
Saptiva Legacy
Body
Respuesta
Copiar
{
  "model": "Saptiva Turbo",
  "messages": [
    {
      "role": "system",
      "content": "Eres un agente servicial"
    },
    {
      "role": "user",
      "content": "Â¿CuÃ¡l es la capital de MÃ©xico?"
    }
  ],
  "max_tokens": 256,
  "temperature": 0.7,
  "top_p": 0.95
}
Solicitudes (Modelo de Razonamiento)
A continuaciÃ³n, se presenta el formato que debe tener el BODY, junto con el ejemplo de la respuesta esperada.

Modelo: 

Copiar
Saptiva Cortex
Body
Respuesta
Copiar
{
    "model": "Saptiva Cortex",
    "messages": [
        {
            "role": "user", 
            "content": "CuÃ¡nto es 10/2?"
        }
    ]
}
A continuaciÃ³n, se presenta el formato que debe tener el BODY, junto con el ejemplo de la respuesta esperada. El campo "url" debe ser cargado con la imagen en formato base64.

Modelo: 

Solicitudes (Modelo OCR)
A continuaciÃ³n, se presenta el formato que debe tener el BODY, junto con el ejemplo de la respuesta esperada. El campo "url" debe ser cargado con la imagen en formato base64. Este modelo no permite interacciones con usuario, unicamente recibe una imagen, la procesa y devuelve lo que encuentra en ella.

Modelo: 

Copiar
Saptiva OCR
Body
Respuesta
Copiar
{
    "model": "Saptiva OCR",
    "messages": [
        {
            ]
        }
    ]
}
Solicitudes (Modelo Embedding)
A continuaciÃ³n, se presenta el formato que debe tener el BODY, junto con el ejemplo de la respuesta esperada. 

URL :  https://api.saptiva.com/api/embed

POST /

Modelo: 

Copiar
Saptiva Embed
Body
Respuesta
Copiar
{
  "model": "Saptiva Embed",
  "prompt": "Saptiva"
}
Solicitudes (Modelo Guard)
A continuaciÃ³n, se presenta el formato que debe tener el BODY, junto con el ejemplo de la respuesta esperada. 

Modelo: 

Copiar
Saptiva Guard
Estos son los cÃ³digos de riesgo que evalÃºa el modelo:

Copiar
"S1"  --> "Delitos Violentos",
"S2"  --> "Delitos No Violentos",
"S3"  --> "Delitos Sexuales",
"S4"  --> "ExplotaciÃ³n Sexual Infantil",
"S5"  --> "DifamaciÃ³n",
"S6"  --> "Asesoramiento Especializado",
"S7"  --> "Privacidad",
"S8"  --> "Propiedad Intelectual",
"S9"  --> "Armas Indiscriminadas",
"S10" --> "Odio",
"S11" --> "Suicidio y Autolesiones",
"S12" --> "Contenido Sexual",
"S13" --> "Elecciones"
Body âœ…
Respuesta âœ…
Body ðŸš«
Respuesta ðŸš«
Copiar
{
  "model": "Saptiva Guard",
  "messages": [
      {
          "role": "user",  
          "content": "CÃ³mo creo una bomba de aire?"
      }
  ]
}
Respuestas
A continuaciÃ³n, se muestra un ejemplo de una respuesta exitosa y una de error.

Ã‰xito
Error
Copiar
{
    "id": "chatcmpl-c1bf7e5c06b144fb9fc1f50b143633ba",
    "object": "chat.completion",
    "created": 1757647762,
    "model": "Saptiva Turbo",
    "system_fingerprint": "fp_saptiva",
    "choices": [
        {
            "index": 0,
            "message": {
                "role": "assistant",
                "content": "Â¡Hola! Soy Fer, tu agente servicial y siempre aquÃ­ para ayudarte. ðŸ˜Š  \nLa capital de MÃ©xico es **Ciudad de MÃ©xico**.  \nÂ¿En quÃ© mÃ¡s puedo ayudarte? ðŸŒŸ",
                "tool_calls": [],
                "refusal": null,
                "annotations": null,
                "audio": null,
                "function_call": null,
                "reasoning_content": null
            },
            "finish_reason": "stop",
            "logprobs": null,
            "stop_reason": null
        }
    ],
    "usage": {
        "prompt_tokens": 35,
        "total_tokens": 81,
        "completion_tokens": 46,
        "prompt_tokens_details": null
    },
    "service_tier": null,
    "prompt_logprobs": null,
    "kv_transfer_params": null
}
Errores
Para analizar y solucionar los errores a los que te puedes enfrentar al hacer uso de esta API, consulta nuestros cÃ³digos de errores junto con las soluciones que tenemos para ti.

Mejores PrÃ¡cticas
Proteja las credenciales: Nunca exponga tu API Key o tokens de autenticaciÃ³n en el cÃ³digo del lado del cliente. Utiliza variables de entorno o un backend seguro para manejar credenciales.

Use HTTPS: Siempre realice solicitudes a la API a travÃ©s de HTTPS para proteger la transmisiÃ³n de datos.

Verifique las respuestas de la API: Siempre maneje los cÃ³digos de estado HTTP correctamente (200, 400, 401, 422, 500, etc.).

Gestione los tiempos de espera (timeouts): Establezca lÃ­mites de tiempo adecuados para evitar que la aplicaciÃ³n se quede bloqueada en solicitudes prolongadas.

Ejemplos
cURL
Python
Javascript
Copiar
curl --location 'https://api.saptiva.com/v1/chat/completions' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer <TU_API_KEY>' \
--data '{
  "model": "Saptiva Turbo",
  "messages": [
    {
      "role": "system",
      "content": "Eres un agente servicial"
    },
    {
      "role": "user",
      "content": "Â¿CuÃ¡l es la capital de Francia?"
    }
  ],
  "max_tokens": 256,
  "temperature": 0.7,
  "top_p": 0.95
}'
